package gui;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import controller.Controller;
import model.Team;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.List;
import java.util.Map;

import static utils.Utils.COLONNE_CLASSIFICA;

public class Classifica {
    private JPanel panel1;
    private JTable table1;
    private JButton tornaAllaHomeButton;
    public JFrame classificaFrame;
    public JFrame homeUtenteFrame;
    public DefaultTableModel listaTeamModel;
    private Controller controller;


    public Classifica(JFrame homeUtenteFrame, Controller controller) {

        this.homeUtenteFrame = homeUtenteFrame;
        this.classificaFrame = new JFrame("Classifica");
        this.controller = controller;

        classificaFrame.setContentPane(panel1);
        classificaFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        classificaFrame.pack();

        List<Team> listaTeam = controller.stampaClassifica(controller.getIdHackathon());
        Map<Long, Double> medie = controller.getMedie(listaTeam);

        Object[][] datiTable = new Object[listaTeam.size()][3];

        for (int i = 0; i < listaTeam.size(); i++) {
            Team team = listaTeam.get(i);
            datiTable[i][0] = team.getId();
            datiTable[i][1] = team.getNome();
            datiTable[i][2] = medie.get(team.getId());
        }





        DefaultTableModel tabellaTeam = new DefaultTableModel(datiTable, COLONNE_CLASSIFICA) {
            @Override
            public Class<?> getColumnClass(int columnIndex) {
                return switch (columnIndex) {
                    case 0 -> Long.class;
                    case 1 -> String.class;
                    default -> Double.class;
                };
            }
        };
        this.listaTeamModel = tabellaTeam;
        table1.setModel(tabellaTeam);

        tornaAllaHomeButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                homeUtenteFrame.setVisible(true);
                classificaFrame.setVisible(false);
                classificaFrame.dispose();


            }
        });


    }


    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panel1 = new JPanel();
        panel1.setLayout(new GridLayoutManager(4, 3, new Insets(0, 0, 0, 0), -1, -1));
        final JLabel label1 = new JLabel();
        label1.setText("CLASSIFICA");
        panel1.add(label1, new GridConstraints(0, 0, 2, 3, GridConstraints.ANCHOR_NORTH, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new GridLayoutManager(2, 1, new Insets(0, 0, 0, 0), -1, -1));
        panel1.add(panel2, new GridConstraints(3, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        table1 = new JTable();
        JScrollPane scrollPane = new JScrollPane(table1);
        panel2.add(scrollPane, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_WANT_GROW, null, new Dimension(150, 50), null, 0, false));
        tornaAllaHomeButton = new JButton();
        tornaAllaHomeButton.setText("Torna alla Home");
        panel2.add(tornaAllaHomeButton, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));

    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel1;
    }


}
